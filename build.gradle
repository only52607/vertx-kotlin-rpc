buildscript {
    ext {
        vertx_version = "3.6.2"
    }
    repositories {
        jcenter()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'idea'
    id 'maven'
    id 'maven-publish'
    id "org.jetbrains.dokka" version "0.9.17"
    id "com.jfrog.bintray" version "1.8.4"
}

group 'codes.unwritten'
version '0.4'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "io.vertx:vertx-lang-kotlin-coroutines:$vertx_version"
    compile "com.esotericsoftware:kryo:5.0.0-RC1"

    testCompile "io.vertx:vertx-unit:$vertx_version"
    testCompile "junit:junit:4.12"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestJava {
}
task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}
dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}
task kotlinDocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

def pomConfig = {
    licenses {
        license {
            name "WTFPL"
            url "http://www.wtfpl.net/about"
            distribution "https://github.com/windoze/vertx-kotlin-rpc"
        }
    }
    developers {
        developer {
            id "windoze"
            name "Chen Xu"
            email "windoze@0d0a.com"
        }
    }
}

publishing {
    publications {
        mavenKotlin(MavenPublication) {
            from components.java
            artifact kotlinDocJar

            artifact sourceJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', "A minimalist RPC framework for Vertx/Kotlin.")
                root.children().last() + pomConfig

                def dependenciesNode = root.appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if (it.group && it.name && it.version) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.hasProperty('bintray.user') ? properties.property('bintray.user') : System.getenv('BINTRAY_USER')
    key = properties.hasProperty('bintray.apikey') ? properties.property('bintray.apikey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenKotlin']
    publish = true

    pkg {
        repo = 'maven'
        name = "vertx-kotlin-rpc"
        desc = "A minimalist RPC framework for Vertx/Kotlin"
        websiteUrl = "https://github.com/windoze/vertx-kotlin-rpc"
        issueTrackerUrl = "https://github.com/windoze/vertx-kotlin-rpc/issues"
        vcsUrl = "https://github.com/windoze/vertx-kotlin-rpc.git"
        licenses = ['WTFPL']
        publicDownloadNumbers = true
        version {
            name = "0.4"
            desc = "Vertx Kotlin RPC 0.4"
            released = new Date()
            vcsTag = "0.4.0"
        }
    }
}

